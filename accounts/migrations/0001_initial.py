# Generated by Django 5.1.4 on 2024-12-15 07:50

import accounts.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='email address')),
                ('username', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. Use letters, numbers, and @/./+/-/_ only.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Last Name')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_verified', models.BooleanField(default=False, verbose_name='verified')),
                ('two_factor_enabled', models.BooleanField(default=False, verbose_name='two-factor authentication')),
                ('login_count', models.PositiveIntegerField(default=0, verbose_name='login count')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='last login IP')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='last activity')),
                ('language_preference', models.CharField(choices=[('en', 'English'), ('id', 'Bahasa Indonesia')], default='en', max_length=10, verbose_name='language preference')),
                ('theme', models.CharField(choices=[('default', 'Default'), ('modern', 'Modern'), ('gradient', 'Gradient')], default='default', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity_type', models.CharField(choices=[('LOGIN', 'LOGIN'), ('LOGOUT', 'LOGOUT'), ('REGISTRATION', 'REGISTRATION'), ('PROFILE_UPDATE', 'PROFILE_UPDATE'), ('PASSWORD_CHANGE', 'PASSWORD_CHANGE'), ('EMAIL_VERIFICATION', 'EMAIL_VERIFICATION'), ('ACCOUNT_ACTIVATION', 'ACCOUNT_ACTIVATION'), ('TWO_FACTOR_AUTH', 'TWO_FACTOR_AUTH'), ('PASSWORD_RESET', 'PASSWORD_RESET'), ('DEVICE_LOGIN', 'DEVICE_LOGIN'), ('UNAUTHORIZED_ACCESS', 'UNAUTHORIZED_ACCESS')], max_length=30, verbose_name='Activity Type')),
                ('severity', models.CharField(choices=[('INFO', 'INFO'), ('WARNING', 'WARNING'), ('CRITICAL', 'CRITICAL')], default='INFO', max_length=20, verbose_name='Severity Level')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User  Agent')),
                ('location', models.JSONField(blank=True, null=True, verbose_name='Location Information')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Timestamp')),
                ('additional_info', models.JSONField(blank=True, null=True, verbose_name='Additional Information')),
                ('is_suspicious', models.BooleanField(default=False, verbose_name='Suspicious Activity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL, verbose_name='User ')),
            ],
            options={
                'verbose_name': 'User  Activity',
                'verbose_name_plural': 'User  Activities',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone Number')),
                ('education_level', models.CharField(blank=True, choices=[('SD', 'Elementary School'), ('SMP', 'Junior High School'), ('SMA', 'Senior High School'), ('D3', 'Diploma'), ('S1', 'Bachelor'), ('S2', 'Master'), ('S3', 'Doctorate'), ('OTHER', 'Other')], max_length=10, verbose_name='Education Level')),
                ('occupation', models.CharField(blank=True, max_length=100, verbose_name='Occupation')),
                ('marital_status', models.CharField(blank=True, choices=[('S', 'Single'), ('M', 'Married'), ('D', 'Divorced'), ('W', 'Widowed')], max_length=1, verbose_name='Marital Status')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=accounts.models.user_profile_image_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif'])])),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('twitter_username', models.CharField(blank=True, max_length=100, verbose_name='Twitter Username')),
                ('linkedin_username', models.CharField(blank=True, max_length=100, verbose_name='LinkedIn Username')),
                ('github_username', models.CharField(blank=True, max_length=100, verbose_name='GitHub Username')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User  Profile',
                'verbose_name_plural': 'User  Profiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email', 'username'], name='accounts_cu_email_bc3285_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', 'activity_type', 'timestamp'], name='accounts_us_user_id_feb042_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['is_suspicious', 'timestamp'], name='accounts_us_is_susp_c49e2e_idx'),
        ),
        migrations.AddConstraint(
            model_name='useractivity',
            constraint=models.UniqueConstraint(fields=('user', 'activity_type', 'timestamp'), name='unique_user_activity'),
        ),
    ]
